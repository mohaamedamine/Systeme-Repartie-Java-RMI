package server_rmi;

import java.rmi.*;
import java.rmi.server.*;
import java.rmi.registry.*;
import java.rmi.server.RMIClassLoader;
import java.util.Properties;

import client_rmi.FabObjetInterface;

public class DynamicServer {
	public static void main(String[] args) {
		try {
			if (System.getSecurityManager() == null)
				System.setSecurityManager(new RMISecurityManager());

			Registry registry = LocateRegistry.createRegistry(1099);
			System.out.println("Serveur : Construction de l'implementation");
			// FabReverseImpl fab=new FabReverseImpl();
			System.out.println("Objet Fabrique lie dans le RMIregistry");
			Properties p = System.getProperties();
			//System.out.println("p récupérée" + p);
			String url = p.getProperty("java.rmi.server.codebase");
			//System.out.println("url récupérée"+url);
			Class ClasseServeur = RMIClassLoader.loadClass(url, "server_rmi.FabObjetImpl"); 
			//System.out.println("Loader opérationnel");
			registry.rebind("Fabrique", (Remote) ClasseServeur.newInstance());
			Registry reg = LocateRegistry.getRegistry("localhost", 1099);
			System.out.println("registry "+reg);
			FabObjetInterface fabrique = (FabObjetInterface) reg.lookup("Fabrique");
			System.out.println(fabrique);
			System.out.println("Serveur prêt.");
			System.out.println("Attente des invocations des clients ...");
		} catch (Exception e) {
			System.out.println("Erreur de liaison de l'objet Fabrique");
			System.out.println(e.toString());
		}
	}
}
//il est résolu également dans éclipse manque plus  qu'on voit c'est quoi cette histoire de la classe manquante